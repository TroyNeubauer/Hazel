language: cpp

matrix:
  include:
    # Linux:
    #Linux - GCC
    - os: linux
      env:
        - BUILD_CONFIG=debug
        - PREMAKE_CMD="premake5 --os=linux --compiler=gcc gmake2"
    - os: linux
      env:
        - BUILD_CONFIG=release
        - PREMAKE_CMD="premake5 --os=linux --compiler=gcc gmake2"
    - os: linux
      env:
        - BUILD_CONFIG=dist
        - PREMAKE_CMD="premake5 --os=linux --compiler=gcc gmake2"
    #Linux - Clang
    - os: linux
      env:
        - BUILD_CONFIG=debug
        - PREMAKE_CMD="premake5 --os=linux --compiler=clang gmake2"
    - os: linux
      env:
        - BUILD_CONFIG=release
        - PREMAKE_CMD="premake5 --os=linux --compiler=clang gmake2"
    - os: linux
      env:
        - BUILD_CONFIG=dist
        - PREMAKE_CMD="premake5 --os=linux --compiler=clang gmake2"
    #Linux - Emscripten
    - os: linux
      env:
        - BUILD_CONFIG=dist
        - PREMAKE_CMD="premake5 --os=emscripten --scripts=Hazel/vendor/premake/scripts gmake2"
        - COMPILER=emcc
    # Windows:
    - os: windows
      env:
        - BUILD_CONFIG=debug
        - PREMAKE_CMD="Hazel\vendor\premake\bin\premake5.exe --os=windows --compiler=msc vs2017"
    - os: windows
      env:
        - BUILD_CONFIG=release
        - PREMAKE_CMD="Hazel\vendor\premake\bin\premake5.exe --os=windows --compiler=msc vs2017"
    - os: windows
      env:
        - BUILD_CONFIG=dist
        - PREMAKE_CMD="Hazel\vendor\premake\bin\premake5.exe --os=windows --compiler=msc vs2017"

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-9
      - g++-9
      - libglu1-mesa-dev
      - freeglut3-dev
      - mesa-common-dev
      - xorg-dev
      - e2fslibs-dev
      - nettle-dev
      - acl-dev
      - libghc-bzlib-dev
      - lzma-dev
      - libroslz4-dev

install:
  - |
    if [ $TRAVIS_OS_NAME == "linux" ]
    then
      wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha14/premake-5.0.0-alpha14-linux.tar.gz -O premake.tar.gz
      tar -xf premake.tar.gz
      chmod +x premake5
      export PATH=$PATH:$(pwd)
      gcc -v && g++ -v --version
    fi
  - |
    if [ $COMPILER == "emcc" ]
    then
      wget -q https://github.com/emscripten-core/emsdk/archive/master.tar.gz
      tar -xvf master.tar.gz
      emsdk-master/emsdk update
      emsdk-master/emsdk install latest-fastcomp
      emsdk-master/emsdk activate latest-fastcomp
      source emsdk-master/emsdk_env.sh
    fi

script:
# Create the project files
  - echo $TRAVIS_OS_NAME
  - echo $PREMAKE_TARGET
  - |
    if [ $COMPILER == "emcc" ]
    then
      source emsdk-master/emsdk_env.sh
    fi
  - cp -r .github/CI\ Project/* ..
  - cd ..
  #We dont need these vars. The makefile runs the right compiler anyway
  - unset CC
  - unset CXX
  - unset AR
  - echo Running... $PREMAKE_CMD
  - echo commands... $CC $CXX $AR
  - $PREMAKE_CMD
  - |
    if [ $TRAVIS_OS_NAME == "linux" ]
    then
      make -j2 config=$BUILD_CONFIG
    elif [$TRAVIS_OS_NAME == "windows"]
    then
      echo "Building on windows!"
    fi
  - ls
