# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
PCH = src/hzpch.h
PCH_PLACEHOLDER = $(OBJDIR)/$(notdir $(PCH))
GCH = $(PCH_PLACEHOLDER).gch
INCLUDES += -Isrc -Ivendor/spdlog/include -Ivendor/GLFW/include -Ivendor/Glad/include -Ivendor/imgui -Ivendor/glm -Ivendor/Vulkan/include -Ivendor/FastNoiseSIMD/FastNoiseSIMD -Ivendor/TUtil/TUtil/include -Ivendor/freeimage/Source -Ivendor/freeimage/Source/FreeImage -Ivendor/freeimage/Source/FreeImageToolkit -Ivendor/freeimage/Source/LibOpenJPEG -Ivendor/freeimage/Source/LibPNG -Ivendor/freeimage/Source/Metadata -Ivendor/freeimage/Source/ZLib
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../bin/Debug-linux-x86_64/Hazel
TARGET = $(TARGETDIR)/libHazel.a
OBJDIR = ../bin-int/Debug-linux-x86_64/Hazel
DEFINES += -DHZ_ENABLE_GRAPHICS_API_NONE -DHZ_ENABLE_OPEN_GL -DGLFW_INCLUDE_NONE -DGLM_FORCE_INTRINSICS -DHZ_GLFW_INPUT -DHZ_GLFW_WINDOW -DFREEIMAGE_LIB -D_CRT_SECURE_NO_WARNINGS -DHZ_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -ffloat-store -g -mavx
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -ffloat-store -g -mavx -std=c++17
LIBS += vendor/GLFW/bin/Debug-linux-x86_64/GLFW/libGLFW.a ../bin/Debug-linux-x86_64/Glad/libGlad.a ../bin/Debug-linux-x86_64/ImGui/libImGui.a ../bin/Debug-linux-x86_64/freeimage/libfreeimage.a ../bin/Debug-linux-x86_64/FastNoiseSIMD/libFastNoiseSIMD.a ../bin/Debug-linux-x86_64/zlib/libzlib.a vendor/TUtil/bin/Debug-linux-x86_64/TUtil/libTUtil.a -lX11
LDDEPS += vendor/GLFW/bin/Debug-linux-x86_64/GLFW/libGLFW.a ../bin/Debug-linux-x86_64/Glad/libGlad.a ../bin/Debug-linux-x86_64/ImGui/libImGui.a ../bin/Debug-linux-x86_64/freeimage/libfreeimage.a ../bin/Debug-linux-x86_64/FastNoiseSIMD/libFastNoiseSIMD.a ../bin/Debug-linux-x86_64/zlib/libzlib.a vendor/TUtil/bin/Debug-linux-x86_64/TUtil/libTUtil.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = ../bin/Release-linux-x86_64/Hazel
TARGET = $(TARGETDIR)/libHazel.a
OBJDIR = ../bin-int/Release-linux-x86_64/Hazel
DEFINES += -DHZ_ENABLE_GRAPHICS_API_NONE -DHZ_ENABLE_OPEN_GL -DGLFW_INCLUDE_NONE -DGLM_FORCE_INTRINSICS -DHZ_GLFW_INPUT -DHZ_GLFW_WINDOW -DFREEIMAGE_LIB -D_CRT_SECURE_NO_WARNINGS -DHZ_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -O3 -mavx
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -O3 -mavx -std=c++17
LIBS += vendor/GLFW/bin/Release-linux-x86_64/GLFW/libGLFW.a ../bin/Release-linux-x86_64/Glad/libGlad.a ../bin/Release-linux-x86_64/ImGui/libImGui.a ../bin/Release-linux-x86_64/freeimage/libfreeimage.a ../bin/Release-linux-x86_64/FastNoiseSIMD/libFastNoiseSIMD.a ../bin/Release-linux-x86_64/zlib/libzlib.a vendor/TUtil/bin/Release-linux-x86_64/TUtil/libTUtil.a -lX11
LDDEPS += vendor/GLFW/bin/Release-linux-x86_64/GLFW/libGLFW.a ../bin/Release-linux-x86_64/Glad/libGlad.a ../bin/Release-linux-x86_64/ImGui/libImGui.a ../bin/Release-linux-x86_64/freeimage/libfreeimage.a ../bin/Release-linux-x86_64/FastNoiseSIMD/libFastNoiseSIMD.a ../bin/Release-linux-x86_64/zlib/libzlib.a vendor/TUtil/bin/Release-linux-x86_64/TUtil/libTUtil.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),dist)
TARGETDIR = ../bin/Dist-linux-x86_64/Hazel
TARGET = $(TARGETDIR)/libHazel.a
OBJDIR = ../bin-int/Dist-linux-x86_64/Hazel
DEFINES += -DHZ_ENABLE_GRAPHICS_API_NONE -DHZ_ENABLE_OPEN_GL -DGLFW_INCLUDE_NONE -DGLM_FORCE_INTRINSICS -DHZ_GLFW_INPUT -DHZ_GLFW_WINDOW -DFREEIMAGE_LIB -D_CRT_SECURE_NO_WARNINGS -DHZ_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -O3 -mavx
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -O3 -mavx -std=c++17
LIBS += vendor/GLFW/bin/Dist-linux-x86_64/GLFW/libGLFW.a ../bin/Dist-linux-x86_64/Glad/libGlad.a ../bin/Dist-linux-x86_64/ImGui/libImGui.a ../bin/Dist-linux-x86_64/freeimage/libfreeimage.a ../bin/Dist-linux-x86_64/FastNoiseSIMD/libFastNoiseSIMD.a ../bin/Dist-linux-x86_64/zlib/libzlib.a vendor/TUtil/bin/Dist-linux-x86_64/TUtil/libTUtil.a -lX11
LDDEPS += vendor/GLFW/bin/Dist-linux-x86_64/GLFW/libGLFW.a ../bin/Dist-linux-x86_64/Glad/libGlad.a ../bin/Dist-linux-x86_64/ImGui/libImGui.a ../bin/Dist-linux-x86_64/freeimage/libfreeimage.a ../bin/Dist-linux-x86_64/FastNoiseSIMD/libFastNoiseSIMD.a ../bin/Dist-linux-x86_64/zlib/libzlib.a vendor/TUtil/bin/Dist-linux-x86_64/TUtil/libTUtil.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else
  $(error "invalid configuration $(config)")
endif

# Per File Configurations
# #############################################


# File sets
# #############################################

OBJECTS :=

OBJECTS += $(OBJDIR)/AllocTracker.o
OBJECTS += $(OBJDIR)/Application.o
OBJECTS += $(OBJDIR)/Buffer.o
OBJECTS += $(OBJDIR)/CameraController.o
OBJECTS += $(OBJDIR)/ContextManager.o
OBJECTS += $(OBJDIR)/CountTracker.o
OBJECTS += $(OBJDIR)/DebugLayer.o
OBJECTS += $(OBJDIR)/Engine.o
OBJECTS += $(OBJDIR)/Event.o
OBJECTS += $(OBJDIR)/FileTracker.o
OBJECTS += $(OBJDIR)/GLFWInput.o
OBJECTS += $(OBJDIR)/GLFWWindow.o
OBJECTS += $(OBJDIR)/Graph.o
OBJECTS += $(OBJDIR)/GraphicsAPI.o
OBJECTS += $(OBJDIR)/IcoashedronMesh.o
OBJECTS += $(OBJDIR)/ImGuiBuild.o
OBJECTS += $(OBJDIR)/LayerStack.o
OBJECTS += $(OBJDIR)/Log.o
OBJECTS += $(OBJDIR)/NoAPI.o
OBJECTS += $(OBJDIR)/OpenGLContext.o
OBJECTS += $(OBJDIR)/OpenGLImGuiLayer.o
OBJECTS += $(OBJDIR)/OpenGLRendererAPI.o
OBJECTS += $(OBJDIR)/OpenGLShader.o
OBJECTS += $(OBJDIR)/OpenGLTexture.o
OBJECTS += $(OBJDIR)/OpenGLUtils.o
OBJECTS += $(OBJDIR)/OpenGLVertexArray.o
OBJECTS += $(OBJDIR)/RenderCommand.o
OBJECTS += $(OBJDIR)/Renderer.o
OBJECTS += $(OBJDIR)/Shader.o
OBJECTS += $(OBJDIR)/Texture.o
OBJECTS += $(OBJDIR)/UnixContextManager.o
OBJECTS += $(OBJDIR)/Utils.o
OBJECTS += $(OBJDIR)/VertexArray.o
OBJECTS += $(OBJDIR)/VulkanContext.o
OBJECTS += $(OBJDIR)/VulkanHelper.o
OBJECTS += $(OBJDIR)/VulkanImGuiLayer.o
OBJECTS += $(OBJDIR)/WindowsContextManager.o
OBJECTS += $(OBJDIR)/hzpch.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Hazel
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Hazel
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Application.o: src/Hazel/Application.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CameraController.o: src/Hazel/Camera/CameraController.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ContextManager.o: src/Hazel/Context/ContextManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Engine.o: src/Hazel/Engine.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Event.o: src/Hazel/Events/Event.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiBuild.o: src/Hazel/ImGui/ImGuiBuild.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DebugLayer.o: src/Hazel/Layer/DebugLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LayerStack.o: src/Hazel/Layer/LayerStack.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Log.o: src/Hazel/Log.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/IcoashedronMesh.o: src/Hazel/Mesh/IcoashedronMesh.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Buffer.o: src/Hazel/Renderer/Buffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GraphicsAPI.o: src/Hazel/Renderer/GraphicsAPI.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RenderCommand.o: src/Hazel/Renderer/RenderCommand.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer.o: src/Hazel/Renderer/Renderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shader.o: src/Hazel/Renderer/Shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Texture.o: src/Hazel/Renderer/Texture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexArray.o: src/Hazel/Renderer/VertexArray.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CountTracker.o: src/Hazel/Util/CountTracker.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Graph.o: src/Hazel/Util/Graph.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Utils.o: src/Hazel/Util/Utils.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLFWInput.o: src/Platform/GLFW/GLFWInput.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GLFWWindow.o: src/Platform/GLFW/GLFWWindow.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/NoAPI.o: src/Platform/NoAPI/NoAPI.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLContext.o: src/Platform/OpenGL/OpenGLContext.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLImGuiLayer.o: src/Platform/OpenGL/OpenGLImGuiLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLRendererAPI.o: src/Platform/OpenGL/OpenGLRendererAPI.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLShader.o: src/Platform/OpenGL/OpenGLShader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLTexture.o: src/Platform/OpenGL/OpenGLTexture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLUtils.o: src/Platform/OpenGL/OpenGLUtils.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLVertexArray.o: src/Platform/OpenGL/OpenGLVertexArray.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/AllocTracker.o: src/Platform/System/AllocTracker.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FileTracker.o: src/Platform/System/FileTracker.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/UnixContextManager.o: src/Platform/Unix/UnixContextManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanContext.o: src/Platform/Vulkan/VulkanContext.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanHelper.o: src/Platform/Vulkan/VulkanHelper.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanImGuiLayer.o: src/Platform/Vulkan/VulkanImGuiLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WindowsContextManager.o: src/Platform/Windows/WindowsContextManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hzpch.o: src/hzpch.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif